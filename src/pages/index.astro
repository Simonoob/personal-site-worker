---
import BaseLayout from '../layouts/BaseLayout.astro'
import WorkExperienceItem from '../components/WorkExperienceItem.astro'
import YousicianLogo from '../assets/workplaces/yousician.jpg'
import JsLogo from '../assets/workplaces/javascript.png'
import SayduckLogo from '../assets/workplaces/sayduck.png'
import SwappieLogo from '../assets/workplaces/swappie.jpg'
import { getCollection } from 'astro:content'
import { Image } from 'astro:assets'
import FormattedDate from '../components/FormattedDate.astro'
import xkcdComics from '../assets/xkcd_comics.json'

const featuredPosts = (await getCollection('blog'))
	.sort((a, b) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf())
	.slice(0, 2)
---

<BaseLayout>
	<main class="main box">
		<section>
			<h2>Welcome</h2>
		</section>

		<section>
			<h2>Latest blog posts</h2>
			<ul>
				{
					featuredPosts.length > 0 &&
						featuredPosts.map(post => (
							<li>
								<a
									href={`/blog/${post.id}/`}
									id="featured-post-link"
								>
									{post.data.heroImage && (
										<Image
											src={post.data.heroImage}
											width={720}
											height={360}
											alt={post.data.title}
											id="featured-post-img"
										/>
									)}
									<h3 id="featured-post-title">
										{post.data.title}
									</h3>
									<p id="featured-post-date">
										<FormattedDate
											date={new Date(post.data.pubDate)}
										/>
									</p>
									<p id="featured-post-desc">
										{post.data.description}
									</p>
								</a>
							</li>
						))
				}
			</ul>
			<div class="comic">
				<p>Random xkdc comic for your enjoyment:</p>
				<div id="comic-img-container">
					<img
						id="xkcd-comic-img-placeholder"
						alt="comic image placeholder"
						src="/src/assets/old_man_yells_at_cloudflare.png"
					/>
					<img
						id="xkcd-comic-img"
						alt="comic image"
					/>
				</div>	
			</div>
		</section>
	</main>
	<aside class="aside box">
		<div>
			<h3>Work</h3>
			<ul>
				<li>
					<WorkExperienceItem
						logo={SwappieLogo}
						company="Swappie"
						title="Sofware Engineer"
						start="Oct 2023"
						end="Present"
					/>
				</li>
				<li>
					<WorkExperienceItem
						logo={SayduckLogo}
						company="Sayduck"
						title="Web Dev - Three.js"
						start="Nov 2022"
						end="Oct 2023"
					/>
				</li>
				<li>
					<WorkExperienceItem
						logo={YousicianLogo}
						company="Yousician"
						title="Web Dev"
						start="Nov 2020"
						end="Nov 2022"
					/>
				</li>
				<li>
					<WorkExperienceItem
						logo={JsLogo}
						company="Freelance"
						title="Web Dev"
						start="May 2020"
						end="Nov 2020"
					/>
				</li>
			</ul>
		</div>
		<a
			class="cv-button"
			href="https://drive.google.com/file/d/1dx5e_0UDPSlepHE0M1bjIgQFuq8Fe6Iz/view?usp=sharing"
			>download CV</a
		>
	</aside>
</BaseLayout>

<script>
	import xkcdComics from '../assets/xkcd_comics.json'
	const links = xkcdComics.links
	const randomName = links[Math.floor(Math.random() * links.length)]
		.replace(/\s|,|-/g, '_')
		.replace(/[\.|:|'"]/g, '')
	const imgLink = `https://imgs.xkcd.com/comics/${randomName}_2x.png`
	const img = document.getElementById('xkcd-comic-img')
	const imgPlaceholder = document.getElementById('xkcd-comic-img-placeholder')


	if(img && imgPlaceholder) {
		img.src  = imgLink
		img.style.visibility = 'visible'
	}
</script>

<style>
	.main {
		grid-column: 1 / span 8;
		background: var(--bg-light);
		padding: var(--grid-gutter);
		display: flex;
		flex-direction: column;
		justify-content: space-between;
	}
	.main p {
		margin-bottom: var(--space-m);
	}
	.main section ul {
		list-style: none;
		margin: 0;
		padding: 0;
		display: flex;
		flex-direction: column;
		gap: var(--space-xs);
	}
	.aside {
		grid-column: 9 / -1;
		background: var(--bg-light);
		padding: var(--grid-gutter);
		display: flex;
		flex-direction: column;
		justify-content: space-between;
		align-items: stretch;
	}
	.aside ul {
		list-style: none;
		padding: 0;
		margin: 0;
	}
	@media (max-width: 600px) {
		.main {
			grid-column: span 12;
		}
		.aside {
			grid-column: span 12;
		}
	}

	.aside ul li {
		padding: var(--grid-gutter) 0;
	}

	.aside ul li:first-child {
		padding-top: 0;
	}

	.aside ul li:not(:last-child) {
		border-bottom: var(--space-3xs) solid var(--text-muted);
	}
	.cv-button {
		padding: var(--space-2xs);
		border: var(--space-5xs) solid var(--text-muted);
		text-align: center;
	}
	#featured-post-link {
		display: flex;
		flex-direction: column;
		gap: var(--space-xs);
		text-decoration: none;
		color: inherit;
		border: var(--space-5xs) solid var(--text-muted);
		padding: var(--grid-gutter);
	}
	#featured-post-img {
		width: 100%;
		max-width: 100%;
		aspect-ratio: 2/1;
		object-fit: cover;
		border-radius: var(--space-2xs);
		background: var(--bg-dark);
	}
	#featured-post-title {
		font-size: var(--font-step-1);
		text-decoration: underline;
		margin: 0;
		color: var(--text);
		margin-bottom: 0;
	}
	#featured-post-date {
		font-size: var(--font-step--1);
		color: var(--text-muted);
		font-weight: normal;
		margin-top: 0;
		margin-bottom: 0;
	}
	#featured-post-desc {
		margin: 0;
		font-size: var(--font-step-0);
		font-weight: normal;
		color: var(--text);
	}
	 

	.comic p {
		margin-bottom: var(--space-3xs);
	}

	.comic img {
		position: absolute;
	}

	#comic-img-container {
		position: relative;
		height: calc(var(--grid-gutter) * 10);
	}

	#xkcd-comic-img {
		height: calc(var(--grid-gutter) * 10);
		width: 100%;
		object-fit: contain;
		object-position: top;

		visibility: hidden;
	}
	#xkcd-comic-img-placeholder {
		height: var(--space-xl);

		top: 50%;
		left: 50%;
		translate: -50%;
	}
</style>
